package level1;

import java.util.HashSet;
import java.util.Set;

public class 폰켓몬 {

	public static void main(String[] args) {
		/*
		 * 
		 * 당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 
		 * 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다. 
		 * 홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다.
		 * 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 
		 * 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번,3번]이라면 
		 * 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다. 
		 * 이때, 4마리의 폰켓몬 중 2마리를 고르는 방법은 다음과 같이 6가지가 있습니다.
		 * 
		 * 첫 번째(3번), 두 번째(1번) 폰켓몬을 선택 
		 * 첫 번째(3번), 세 번째(2번) 폰켓몬을 선택
		 * 첫 번째(3번), 네 번째(3번) 폰켓몬을 선택 
		 * 두 번째(1번), 세 번째(2번) 폰켓몬을 선택 
		 * 두 번째(1번), 네 번째(3번) 폰켓몬을 선택 
		 * 세 번째(2번), 네 번째(3번) 폰켓몬을 선택 
		 * 
		 * 이때, 첫 번째(3번) 폰켓몬과 네 번째(3번) 폰켓몬을 선택하는 방법은 
		 * 한 종류(3번 폰켓몬 두 마리)의 폰켓몬만 가질 수 있지만, 
		 * 다른 방법들은 모두 두 종류의 폰켓몬을 가질 수 있습니다. 
		 * 
		 * 따라서 위 예시에서 가질 수 있는 폰켓몬 종류 수의 최댓값은 2가 됩니다. 
		 * 당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 
		 * 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다.
		 * 
		 * N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때,
		 * N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 
		 * 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.
		 * 
		 * 
		 * 제한사항
		 * nums는 폰켓몬의 종류 번호가 담긴 1차원 배열입니다.
		 * nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.
		 * 폰켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.
		 * 가장 많은 종류의 폰켓몬을 선택하는 방법이 여러 가지인 경우에도, 
		 * 선택할 수 있는 폰켓몬 종류 개수의 최댓값 하나만 return 하면 됩니다.
		 */

	}

    public int solution(int[] nums) {
    	/*
    	 * 
    	 * 내가 문제 푸는 방법
    	 * 1. N마리의 포켓몬 중 N/2 마리를 가져갈 수 있다.
    	 * => N/2 마리를 가져올 때 가장 다양하게 가져올 수 있을때를 구해야함.
    	 * => 중복을 없애야한다. hashSet
    	 * 
    	 * 2. N/2 마리를 가져올 수 있으려면 모든 경우를 확인해야한다.
    	 * => N 중에 N/2 만큼  선택 가능, 같은 인덱스는 선택 불가.
    	 * 
    	 * => for을 사용하려면 N을 알아야하고, 코드를 직접 기입해야함 => 제한됨.
    	 * => while을 사용하려면 
    	 * 
    	 * 3. 모든 폰켓몬이 2개로 중복이다.
    	 * => a,a,b,b,c,c,d,d => 4개 선택가능, 최대값 4
    	 * => 중복 제거(선행) a,b,c,d => 4개 선택가능, 최대값 4
    	 * 
    	 * 3-1. 일부 폰켓몬이 2개로 중복이다,.
    	 * => a,b,b,c,c,d => 3개 선택가능, 최대값 3
    	 * => 중복 제거(선행) a,b,c,d => 3개 선택가능, 최대값 3
    	 * 
    	 * 3-2. 모든 포켓몬이 2개 이상 중복이다.
    	 * => a,a,a,b,b,b,c,c,c,d,d,d => 6개 선택가능 , 최대값 4
    	 * => 중복 제거(선행) a,b,c,d => 6개 선택가능 , 최대값 4
    	 * 
    	 * 3-3. 일부 폰켓몬이 2개 이상 중복이다.
    	 * => a,b,b,c,c,c,d,d,d,d,e,f,g,h,i,j,k,l => 9개 선택가능, 최대값 9
    	 * => 중복 제거(선행) a,b,c,d,e,f,g,h,i,j,k,l => 9개 선택가능, 최대값 9
    	 * 
    	 * 
    	 */

    	int answer = 0;
    	
    	Set<Integer> hash = new HashSet<Integer>(); 

    	for(int i = 0; i < nums.length; i++) {
    		hash.add(nums[i]);
    	}
    	
    	for(int i = 0; i < nums.length/2; i++) {
    		
    		if(hash.size() > i) {
    			answer += 1;
    		}
    	}
        return answer;
    }
}
	class 폰켓몬_다른사람 {
	    public int solution(int[] nums) {
	
	            HashSet<Integer> hs = new HashSet<>();
	
	            for(int i =0; i<nums.length;i++) {
	                hs.add(nums[i]);
	            }
	
	            if(hs.size()>nums.length/2)
	                return nums.length/2;
	
	            return hs.size();
	    }
	}

/*
 * hashset을 사용하니 한결 더 코드가 쉬워졌다.
 * 
 * 하지만, 문제를 파악하고, 어떻게 풀어갈 지 많은 고민을 하였다.
 * 문제의 요점과 어떻게 풀어나갈지 잘 파악하는 것이 관건!
 * 
 * 추가로 나는 for문을 사용하여 hash의 크기를 파악하여 answer에 카운트 했지만
 * 더 좋은 코드로는 if문을 사용하여 즉각적으로 판단한 다른 분의 코드였다.
 *
 * 
 * 
 */
