package level1;

public class 문자열나누기 {

	public static void main(String[] args) {
		/*
		 * 문제 설명 
		 * 문자열 s가 입력되었을 때 다음 규칙을 따라서 이 문자열을 여러 문자열로 분해하려고 합니다.
		 * 
		 * 먼저 첫 글자를 읽습니다. 
		 * 이 글자를 x라고 합시다. 
		 * 이제 이 문자열을 왼쪽에서 오른쪽으로 읽어나가면서, x와 x가 아닌 다른 글자들이 나온 횟수를 각각 셉니다. 
		 * 
		 * 처음으로 두 횟수가 같아지는 순간 멈추고, 지금까지 읽은 문자열을 분리합니다. 
		 * s에서 분리한 문자열을 빼고 남은 부분에 대해서 이 과정을 반복합니다. 
		 * 남은 부분이 없다면 종료합니다.
		 *  
		 * 만약 두 횟수가 다른 상태에서 더 이상 읽을 글자가 없다면, 역시 지금까지 읽은 문자열을 분리하고, 종료합니다. 
		 * 
		 * 문자열 s가 매개변수로 주어질 때, 위 과정과 같이 문자열들로 분해하고, 
		 * 분해한 문자열의 개수를 return 하는 함수 solution을 완성하세요.
		 * 
		 * 제한사항
		 * 1 ≤ s의 길이 ≤ 10,000 s는 영어 소문자로만 이루어져 있습니다.
		 * 
		 */

		solution("banana");
	}
    public static int solution(String s) {
    	/*
    	 * 내가 문제 푸는 방법
    	 * 1. s를 split하여 arr에 저장한다.
    	 * 2. 반복문을 통하여 arr[0]과 같은 문자는 O변수, 다른 문자는 X 변수에 카운트 한다. 
    	 * 3. O와 X의 값이 같아지면, 지금까지 읽은(=arr[i])과 그 이후의 문자열로 분리한다.
    	 * 
    	 * 4. 이후 arr[i+1]부터 위의 과정을 반복하고, 더 이상 읽을 글자가 없다면, 문자열을 분리하고 종료.
    	 * 
    	 * 5. 분리된 문자열의 개수를 return.
    	 */
    	
        int answer = 0;
        
        int O = 0;
        int X = 0;
        String[] arr = s.split("");
        
        int num = 0;
        for(int i = 0; i < arr.length; i++) {
        	
        	if(arr[num].equals(arr[i])) {
        		O++;
        	} else {
        		X++;
        	}
        	
        	if(O == X) {
        		answer ++; // 문자열 나눈 것 카운트
        		O = 0; // 같을 때 카운트하는 변수 초기화
        		X = 0; // 다를 때 카운트하는 변수 초기화
        		num = i+1; // 현재 i + 1 의 인덱스를 가진 값이 비교대상이 됨.
        	}
        }
         /*
          * 반복문을 종료했을 때 남은 문자열에 대해 카운트
          */
        if(O != X) {
        	answer ++;
        }
        
        return answer;
    }

}

/*
 * 다른 사람들의 코드도 비슷했다. (== if 문 떡칠)
 * 조금만 생각하면 쉽게 구현 가능.
 * 
 * 처음에는 매개변수를 가지는 메서드로 구현하려고 하였지만
 * 생각이 복잡해져서 그냥 풀었다.
 *
 */ 
